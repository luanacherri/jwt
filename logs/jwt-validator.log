{"@timestamp":"2025-06-12T23:06:01.522-0300","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:01.573-0300","@version":"1","message":"Starting AppTest using Java 21.0.7 with PID 20392 (started by luana in C:\\Users\\luana\\Desktop\\java-project)","logger_name":"com.example.AppTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:01.574-0300","@version":"1","message":"Running with Spring Boot v3.2.2, Spring v6.1.3","logger_name":"com.example.AppTest","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:06:01.576-0300","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.example.AppTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:03.233-0300","@version":"1","message":"Base64JwtDecoder initialized","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:03.241-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:03.242-0300","@version":"1","message":"JwtController initialized","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:04.776-0300","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:04.915-0300","@version":"1","message":"Started AppTest in 4.18 seconds (process running for 5.531)","logger_name":"com.example.AppTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:06.310-0300","@version":"1","message":"Starting JWT validation [requestId=97f284c9-56d4-409e-b5db-ee662ad9f0ea]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"97f284c9-56d4-409e-b5db-ee662ad9f0ea"}
{"@timestamp":"2025-06-12T23:06:06.310-0300","@version":"1","message":"Starting JWT decoding [requestId=97f284c9-56d4-409e-b5db-ee662ad9f0ea]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"97f284c9-56d4-409e-b5db-ee662ad9f0ea"}
{"@timestamp":"2025-06-12T23:06:06.318-0300","@version":"1","message":"Failed to parse JSON payload [requestId=97f284c9-56d4-409e-b5db-ee662ad9f0ea]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'u': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"u�\\u001D~��Ȕ��\\u001AȎ��Y\\u001BZ[��\\u0008�ٮB#�#s�C\\u0012\"�$�\\u0016�R#�%F����\\u0004\\u0017&\\u0017V��'\"; line: 1, column: 2]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2477)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:760)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(ReaderBasedJsonParser.java:3041)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:2082)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:808)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4912)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4818)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3755)\r\n\tat com.example.service.decoder.Base64JwtDecoder.decode(Base64JwtDecoder.java:46)\r\n\tat com.example.service.JwtValidationService.validateJwt(JwtValidationService.java:34)\r\n\tat com.example.AppTest.testCaso2_JWTInvalido(AppTest.java:25)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)\r\n","requestId":"97f284c9-56d4-409e-b5db-ee662ad9f0ea"}
{"@timestamp":"2025-06-12T23:06:06.326-0300","@version":"1","message":"JWT validation failed: JWT inválido: payload não é um JSON válido [requestId=97f284c9-56d4-409e-b5db-ee662ad9f0ea]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"97f284c9-56d4-409e-b5db-ee662ad9f0ea"}
{"@timestamp":"2025-06-12T23:06:06.368-0300","@version":"1","message":"Starting JWT validation [requestId=a038adf3-ee59-4902-b99b-671652cc3a87]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"a038adf3-ee59-4902-b99b-671652cc3a87"}
{"@timestamp":"2025-06-12T23:06:06.369-0300","@version":"1","message":"Starting JWT decoding [requestId=a038adf3-ee59-4902-b99b-671652cc3a87]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"a038adf3-ee59-4902-b99b-671652cc3a87"}
{"@timestamp":"2025-06-12T23:06:06.395-0300","@version":"1","message":"Successfully decoded JWT with 4 claims [requestId=a038adf3-ee59-4902-b99b-671652cc3a87]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"a038adf3-ee59-4902-b99b-671652cc3a87"}
{"@timestamp":"2025-06-12T23:06:06.396-0300","@version":"1","message":"JWT decoded successfully, found 4 claims [requestId=a038adf3-ee59-4902-b99b-671652cc3a87]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"a038adf3-ee59-4902-b99b-671652cc3a87"}
{"@timestamp":"2025-06-12T23:06:06.396-0300","@version":"1","message":"Invalid number of claims: expected 3, found 4 [requestId=a038adf3-ee59-4902-b99b-671652cc3a87]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"a038adf3-ee59-4902-b99b-671652cc3a87"}
{"@timestamp":"2025-06-12T23:06:06.397-0300","@version":"1","message":"JWT validation failed: JWT deve conter exatamente 3 claims (Name, Role, Seed) [requestId=a038adf3-ee59-4902-b99b-671652cc3a87]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"a038adf3-ee59-4902-b99b-671652cc3a87"}
{"@timestamp":"2025-06-12T23:06:06.411-0300","@version":"1","message":"Starting JWT validation [requestId=04efe0d3-21c5-494e-b038-72ae2d8f9abb]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"04efe0d3-21c5-494e-b038-72ae2d8f9abb"}
{"@timestamp":"2025-06-12T23:06:06.411-0300","@version":"1","message":"Starting JWT decoding [requestId=04efe0d3-21c5-494e-b038-72ae2d8f9abb]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"04efe0d3-21c5-494e-b038-72ae2d8f9abb"}
{"@timestamp":"2025-06-12T23:06:06.412-0300","@version":"1","message":"Successfully decoded JWT with 3 claims [requestId=04efe0d3-21c5-494e-b038-72ae2d8f9abb]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"04efe0d3-21c5-494e-b038-72ae2d8f9abb"}
{"@timestamp":"2025-06-12T23:06:06.413-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=04efe0d3-21c5-494e-b038-72ae2d8f9abb]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"04efe0d3-21c5-494e-b038-72ae2d8f9abb"}
{"@timestamp":"2025-06-12T23:06:06.414-0300","@version":"1","message":"JWT validation successful [requestId=04efe0d3-21c5-494e-b038-72ae2d8f9abb]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000,"requestId":"04efe0d3-21c5-494e-b038-72ae2d8f9abb"}
{"@timestamp":"2025-06-12T23:06:06.429-0300","@version":"1","message":"Starting JWT validation [requestId=affb1d48-f85c-4299-95b9-0cf3d75d7ae0]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"affb1d48-f85c-4299-95b9-0cf3d75d7ae0"}
{"@timestamp":"2025-06-12T23:06:06.429-0300","@version":"1","message":"Starting JWT decoding [requestId=affb1d48-f85c-4299-95b9-0cf3d75d7ae0]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"affb1d48-f85c-4299-95b9-0cf3d75d7ae0"}
{"@timestamp":"2025-06-12T23:06:06.430-0300","@version":"1","message":"Successfully decoded JWT with 3 claims [requestId=affb1d48-f85c-4299-95b9-0cf3d75d7ae0]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"affb1d48-f85c-4299-95b9-0cf3d75d7ae0"}
{"@timestamp":"2025-06-12T23:06:06.430-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=affb1d48-f85c-4299-95b9-0cf3d75d7ae0]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"affb1d48-f85c-4299-95b9-0cf3d75d7ae0"}
{"@timestamp":"2025-06-12T23:06:06.430-0300","@version":"1","message":"Invalid claim 'Name' with value 'M4ria Olivia' [requestId=affb1d48-f85c-4299-95b9-0cf3d75d7ae0]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"affb1d48-f85c-4299-95b9-0cf3d75d7ae0"}
{"@timestamp":"2025-06-12T23:06:06.431-0300","@version":"1","message":"JWT validation failed: Claim 'Name' é inválido [requestId=affb1d48-f85c-4299-95b9-0cf3d75d7ae0]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"affb1d48-f85c-4299-95b9-0cf3d75d7ae0"}
{"@timestamp":"2025-06-12T23:06:06.455-0300","@version":"1","message":"Could not detect default configuration classes for test class [com.example.controller.JwtControllerIntegrationTest]: JwtControllerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:06.486-0300","@version":"1","message":"Found @SpringBootConfiguration com.example.App for test class com.example.controller.JwtControllerIntegrationTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:06.598-0300","@version":"1","message":"Starting JwtControllerIntegrationTest using Java 21.0.7 with PID 20392 (started by luana in C:\\Users\\luana\\Desktop\\java-project)","logger_name":"com.example.controller.JwtControllerIntegrationTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:06.598-0300","@version":"1","message":"Running with Spring Boot v3.2.2, Spring v6.1.3","logger_name":"com.example.controller.JwtControllerIntegrationTest","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:06:06.599-0300","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.example.controller.JwtControllerIntegrationTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:07.030-0300","@version":"1","message":"Base64JwtDecoder initialized","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:07.032-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:07.033-0300","@version":"1","message":"JwtController initialized","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:07.336-0300","@version":"1","message":"Filter 'requestLoggingFilter' configured for use","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:06:07.339-0300","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.boot.test.mock.web.SpringBootMockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:07.339-0300","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:07.347-0300","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:07.353-0300","@version":"1","message":"Completed initialization in 13 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:07.372-0300","@version":"1","message":"Started JwtControllerIntegrationTest in 0.878 seconds (process running for 7.989)","logger_name":"com.example.controller.JwtControllerIntegrationTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:07.462-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"155\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:06:07.562-0300","@version":"1","message":"Received JWT validation request [requestId=fae9eb2e-935f-4790-b1ae-3036371e60ae]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000,"requestId":"fae9eb2e-935f-4790-b1ae-3036371e60ae"}
{"@timestamp":"2025-06-12T23:06:07.563-0300","@version":"1","message":"JWT length: 145 [requestId=fae9eb2e-935f-4790-b1ae-3036371e60ae]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"fae9eb2e-935f-4790-b1ae-3036371e60ae"}
{"@timestamp":"2025-06-12T23:06:07.563-0300","@version":"1","message":"Starting JWT validation [requestId=1e476a82-bf2e-4f84-9b32-a243ec2185be]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"1e476a82-bf2e-4f84-9b32-a243ec2185be"}
{"@timestamp":"2025-06-12T23:06:07.563-0300","@version":"1","message":"Starting JWT decoding [requestId=1e476a82-bf2e-4f84-9b32-a243ec2185be]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"1e476a82-bf2e-4f84-9b32-a243ec2185be"}
{"@timestamp":"2025-06-12T23:06:07.564-0300","@version":"1","message":"Failed to parse JSON payload [requestId=1e476a82-bf2e-4f84-9b32-a243ec2185be]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'u': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"u�\\u001D~��Ȕ��\\u001AȎ��Y\\u001BZ[��\\u0008�ٮB#�#s�C\\u0012\"�$�\\u0016�R#�%F����\\u0004\\u0017&\\u0017V��'\"; line: 1, column: 2]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2477)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:760)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(ReaderBasedJsonParser.java:3041)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:2082)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:808)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4912)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4818)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3755)\r\n\tat com.example.service.decoder.Base64JwtDecoder.decode(Base64JwtDecoder.java:46)\r\n\tat com.example.service.JwtValidationService.validateJwt(JwtValidationService.java:34)\r\n\tat com.example.controller.JwtController.validateJwt(JwtController.java:62)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\tat org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\tat org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:289)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)\r\n\tat com.example.controller.JwtControllerIntegrationTest.testJwtInvalidoDeveRetornarErro(JwtControllerIntegrationTest.java:45)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)\r\n","requestId":"1e476a82-bf2e-4f84-9b32-a243ec2185be"}
{"@timestamp":"2025-06-12T23:06:07.565-0300","@version":"1","message":"JWT validation failed: JWT inválido: payload não é um JSON válido [requestId=1e476a82-bf2e-4f84-9b32-a243ec2185be]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"1e476a82-bf2e-4f84-9b32-a243ec2185be"}
{"@timestamp":"2025-06-12T23:06:07.565-0300","@version":"1","message":"JWT validation failed: JWT inválido: payload não é um JSON válido [requestId=fae9eb2e-935f-4790-b1ae-3036371e60ae]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-06-12T23:06:07.590-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"155\"], payload={\"jwt\":\"eyJhbGciOiJzI1NiJ9.dfsdfsfryJSr2xrIjoiQWRtaW4iLCJTZrkIjoiNzg0MSIsIk5hbrUiOiJUb25pbmhvIEFyYXVqbyJ9.QY05fsdfsIjtrcJnP533kQNk8QXcaleJ1Q01jWY_ZzIZuAg\"}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:06:07.646-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"150\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:06:07.648-0300","@version":"1","message":"Received JWT validation request [requestId=b71f7c10-cac5-4350-9436-cf6e4e33609c]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000,"requestId":"b71f7c10-cac5-4350-9436-cf6e4e33609c"}
{"@timestamp":"2025-06-12T23:06:07.648-0300","@version":"1","message":"JWT length: 140 [requestId=b71f7c10-cac5-4350-9436-cf6e4e33609c]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"b71f7c10-cac5-4350-9436-cf6e4e33609c"}
{"@timestamp":"2025-06-12T23:06:07.648-0300","@version":"1","message":"Starting JWT validation [requestId=0f733532-57f9-4902-b094-814ad96bd029]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"0f733532-57f9-4902-b094-814ad96bd029"}
{"@timestamp":"2025-06-12T23:06:07.649-0300","@version":"1","message":"Starting JWT decoding [requestId=0f733532-57f9-4902-b094-814ad96bd029]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"0f733532-57f9-4902-b094-814ad96bd029"}
{"@timestamp":"2025-06-12T23:06:07.650-0300","@version":"1","message":"Successfully decoded JWT with 3 claims [requestId=0f733532-57f9-4902-b094-814ad96bd029]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"0f733532-57f9-4902-b094-814ad96bd029"}
{"@timestamp":"2025-06-12T23:06:07.650-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=0f733532-57f9-4902-b094-814ad96bd029]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"0f733532-57f9-4902-b094-814ad96bd029"}
{"@timestamp":"2025-06-12T23:06:07.651-0300","@version":"1","message":"Invalid claim 'Name' with value 'M4ria Olivia' [requestId=0f733532-57f9-4902-b094-814ad96bd029]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"0f733532-57f9-4902-b094-814ad96bd029"}
{"@timestamp":"2025-06-12T23:06:07.651-0300","@version":"1","message":"JWT validation failed: Claim 'Name' é inválido [requestId=0f733532-57f9-4902-b094-814ad96bd029]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"0f733532-57f9-4902-b094-814ad96bd029"}
{"@timestamp":"2025-06-12T23:06:07.651-0300","@version":"1","message":"JWT validation failed: Claim 'Name' é inválido [requestId=b71f7c10-cac5-4350-9436-cf6e4e33609c]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-06-12T23:06:07.653-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"150\"], payload={\"jwt\":\"eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiRXh0ZXJuYWwiLCJTZWVkIjoiODgwMzciLCJOYW1lIjoiTTRyaWEgT2xpdmlhIn0.6YD73XWZYQSSMDf6H0i3-kylz1-TY_Yt6h1cV2Ku-Qs\"}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:06:07.662-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"2\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:06:07.682-0300","@version":"1","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.controller.dto.JwtValidationResponse> com.example.controller.JwtController.validateJwt(com.example.controller.dto.JwtValidationRequest,org.springframework.web.context.request.WebRequest): [Field error in object 'jwtValidationRequest' on field 'jwt': rejected value [null]; codes [NotBlank.jwtValidationRequest.jwt,NotBlank.jwt,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [jwtValidationRequest.jwt,jwt]; arguments []; default message [jwt]]; default message [O JWT não pode estar vazio]] ]","logger_name":"org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-06-12T23:06:07.683-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"2\"], payload={}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:06:07.694-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"147\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:06:07.695-0300","@version":"1","message":"Received JWT validation request [requestId=6bdd1bf0-a74f-483d-9305-febd3cba4edf]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000,"requestId":"6bdd1bf0-a74f-483d-9305-febd3cba4edf"}
{"@timestamp":"2025-06-12T23:06:07.695-0300","@version":"1","message":"JWT length: 137 [requestId=6bdd1bf0-a74f-483d-9305-febd3cba4edf]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"6bdd1bf0-a74f-483d-9305-febd3cba4edf"}
{"@timestamp":"2025-06-12T23:06:07.696-0300","@version":"1","message":"Starting JWT validation [requestId=0f93077c-3a63-4a4c-b937-f93ea559dee7]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"0f93077c-3a63-4a4c-b937-f93ea559dee7"}
{"@timestamp":"2025-06-12T23:06:07.696-0300","@version":"1","message":"Starting JWT decoding [requestId=0f93077c-3a63-4a4c-b937-f93ea559dee7]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"0f93077c-3a63-4a4c-b937-f93ea559dee7"}
{"@timestamp":"2025-06-12T23:06:07.696-0300","@version":"1","message":"Successfully decoded JWT with 3 claims [requestId=0f93077c-3a63-4a4c-b937-f93ea559dee7]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"0f93077c-3a63-4a4c-b937-f93ea559dee7"}
{"@timestamp":"2025-06-12T23:06:07.696-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=0f93077c-3a63-4a4c-b937-f93ea559dee7]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"0f93077c-3a63-4a4c-b937-f93ea559dee7"}
{"@timestamp":"2025-06-12T23:06:07.697-0300","@version":"1","message":"JWT validation successful [requestId=0f93077c-3a63-4a4c-b937-f93ea559dee7]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000,"requestId":"0f93077c-3a63-4a4c-b937-f93ea559dee7"}
{"@timestamp":"2025-06-12T23:06:07.697-0300","@version":"1","message":"JWT validation completed - Result: VALID [requestId=6bdd1bf0-a74f-483d-9305-febd3cba4edf]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:07.698-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"147\"], payload={\"jwt\":\"eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJTZWVkIjoiNzg0MSIsIk5hbWUiOiJUb25pbmhvIEFyYXVqbyJ9.QY05sIjtrcJnP533kQNk8QXcaleJ1Q01jWY_ZzIZuAg\"}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:06:07.712-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"163\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:06:07.714-0300","@version":"1","message":"Received JWT validation request [requestId=f50452f1-b98f-4eae-9201-50c7060c18ac]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000,"requestId":"f50452f1-b98f-4eae-9201-50c7060c18ac"}
{"@timestamp":"2025-06-12T23:06:07.714-0300","@version":"1","message":"JWT length: 153 [requestId=f50452f1-b98f-4eae-9201-50c7060c18ac]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"f50452f1-b98f-4eae-9201-50c7060c18ac"}
{"@timestamp":"2025-06-12T23:06:07.715-0300","@version":"1","message":"Starting JWT validation [requestId=dfcfa89c-4734-447e-b8d4-6f097e949530]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"dfcfa89c-4734-447e-b8d4-6f097e949530"}
{"@timestamp":"2025-06-12T23:06:07.715-0300","@version":"1","message":"Starting JWT decoding [requestId=dfcfa89c-4734-447e-b8d4-6f097e949530]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"dfcfa89c-4734-447e-b8d4-6f097e949530"}
{"@timestamp":"2025-06-12T23:06:07.715-0300","@version":"1","message":"Successfully decoded JWT with 4 claims [requestId=dfcfa89c-4734-447e-b8d4-6f097e949530]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"dfcfa89c-4734-447e-b8d4-6f097e949530"}
{"@timestamp":"2025-06-12T23:06:07.715-0300","@version":"1","message":"JWT decoded successfully, found 4 claims [requestId=dfcfa89c-4734-447e-b8d4-6f097e949530]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"dfcfa89c-4734-447e-b8d4-6f097e949530"}
{"@timestamp":"2025-06-12T23:06:07.715-0300","@version":"1","message":"Invalid number of claims: expected 3, found 4 [requestId=dfcfa89c-4734-447e-b8d4-6f097e949530]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"dfcfa89c-4734-447e-b8d4-6f097e949530"}
{"@timestamp":"2025-06-12T23:06:07.716-0300","@version":"1","message":"JWT validation failed: JWT deve conter exatamente 3 claims (Name, Role, Seed) [requestId=dfcfa89c-4734-447e-b8d4-6f097e949530]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"dfcfa89c-4734-447e-b8d4-6f097e949530"}
{"@timestamp":"2025-06-12T23:06:07.716-0300","@version":"1","message":"JWT validation failed: JWT deve conter exatamente 3 claims (Name, Role, Seed) [requestId=f50452f1-b98f-4eae-9201-50c7060c18ac]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-06-12T23:06:07.718-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"163\"], payload={\"jwt\":\"eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiTWVtYmVyIiwiT3JnIjoiQlIiLCJTZWVkIjoiMTQ2MjciLCJOYW1lIjoiVmFsZGlyIEFyYW5oYSJ9.cmrXV_Flm5mfdpfNUVopY_I2zeJUy4EZ4i3Fea98zvY\"}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:06:08.134-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:08.197-0300","@version":"1","message":"Starting JWT validation [requestId=9a1230e0-d20a-49a4-a004-e66e40322637]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"9a1230e0-d20a-49a4-a004-e66e40322637"}
{"@timestamp":"2025-06-12T23:06:08.203-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=9a1230e0-d20a-49a4-a004-e66e40322637]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"9a1230e0-d20a-49a4-a004-e66e40322637"}
{"@timestamp":"2025-06-12T23:06:08.205-0300","@version":"1","message":"JWT validation successful [requestId=9a1230e0-d20a-49a4-a004-e66e40322637]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000,"requestId":"9a1230e0-d20a-49a4-a004-e66e40322637"}
{"@timestamp":"2025-06-12T23:06:08.221-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:08.222-0300","@version":"1","message":"Starting JWT validation [requestId=60a57c2e-c665-4b95-a7a8-a7eb62e0350f]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"60a57c2e-c665-4b95-a7a8-a7eb62e0350f"}
{"@timestamp":"2025-06-12T23:06:08.223-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=60a57c2e-c665-4b95-a7a8-a7eb62e0350f]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"60a57c2e-c665-4b95-a7a8-a7eb62e0350f"}
{"@timestamp":"2025-06-12T23:06:08.223-0300","@version":"1","message":"JWT validation successful [requestId=60a57c2e-c665-4b95-a7a8-a7eb62e0350f]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000,"requestId":"60a57c2e-c665-4b95-a7a8-a7eb62e0350f"}
{"@timestamp":"2025-06-12T23:06:08.231-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:08.233-0300","@version":"1","message":"Starting JWT validation [requestId=4168c06b-a87c-4c7e-a5de-483d56c05e72]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"4168c06b-a87c-4c7e-a5de-483d56c05e72"}
{"@timestamp":"2025-06-12T23:06:08.233-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=4168c06b-a87c-4c7e-a5de-483d56c05e72]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"4168c06b-a87c-4c7e-a5de-483d56c05e72"}
{"@timestamp":"2025-06-12T23:06:08.234-0300","@version":"1","message":"JWT validation successful [requestId=4168c06b-a87c-4c7e-a5de-483d56c05e72]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000,"requestId":"4168c06b-a87c-4c7e-a5de-483d56c05e72"}
{"@timestamp":"2025-06-12T23:06:08.241-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:08.244-0300","@version":"1","message":"Starting JWT validation [requestId=4eb9340e-d9ae-48e3-a36d-cc8998807851]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"4eb9340e-d9ae-48e3-a36d-cc8998807851"}
{"@timestamp":"2025-06-12T23:06:08.245-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=4eb9340e-d9ae-48e3-a36d-cc8998807851]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"4eb9340e-d9ae-48e3-a36d-cc8998807851"}
{"@timestamp":"2025-06-12T23:06:08.245-0300","@version":"1","message":"Invalid claim 'Name' with value 'M4ria Olivia' [requestId=4eb9340e-d9ae-48e3-a36d-cc8998807851]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"4eb9340e-d9ae-48e3-a36d-cc8998807851"}
{"@timestamp":"2025-06-12T23:06:08.246-0300","@version":"1","message":"JWT validation failed: Claim 'Name' é inválido [requestId=4eb9340e-d9ae-48e3-a36d-cc8998807851]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"4eb9340e-d9ae-48e3-a36d-cc8998807851"}
{"@timestamp":"2025-06-12T23:06:08.254-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:08.257-0300","@version":"1","message":"Starting JWT validation [requestId=704c2ee6-e1e7-4783-8953-b9a8f3a75fe3]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"704c2ee6-e1e7-4783-8953-b9a8f3a75fe3"}
{"@timestamp":"2025-06-12T23:06:08.258-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=704c2ee6-e1e7-4783-8953-b9a8f3a75fe3]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"704c2ee6-e1e7-4783-8953-b9a8f3a75fe3"}
{"@timestamp":"2025-06-12T23:06:08.259-0300","@version":"1","message":"Invalid claim 'Name' with value 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' [requestId=704c2ee6-e1e7-4783-8953-b9a8f3a75fe3]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"704c2ee6-e1e7-4783-8953-b9a8f3a75fe3"}
{"@timestamp":"2025-06-12T23:06:08.259-0300","@version":"1","message":"JWT validation failed: Claim 'Name' é inválido [requestId=704c2ee6-e1e7-4783-8953-b9a8f3a75fe3]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"704c2ee6-e1e7-4783-8953-b9a8f3a75fe3"}
{"@timestamp":"2025-06-12T23:06:08.266-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:08.268-0300","@version":"1","message":"Starting JWT validation [requestId=8d1b1120-e7f4-4b03-9e99-dfa649c76d9a]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"8d1b1120-e7f4-4b03-9e99-dfa649c76d9a"}
{"@timestamp":"2025-06-12T23:06:08.269-0300","@version":"1","message":"JWT decoded successfully, found 4 claims [requestId=8d1b1120-e7f4-4b03-9e99-dfa649c76d9a]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"8d1b1120-e7f4-4b03-9e99-dfa649c76d9a"}
{"@timestamp":"2025-06-12T23:06:08.270-0300","@version":"1","message":"Invalid number of claims: expected 3, found 4 [requestId=8d1b1120-e7f4-4b03-9e99-dfa649c76d9a]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"8d1b1120-e7f4-4b03-9e99-dfa649c76d9a"}
{"@timestamp":"2025-06-12T23:06:08.270-0300","@version":"1","message":"JWT validation failed: JWT deve conter exatamente 3 claims (Name, Role, Seed) [requestId=8d1b1120-e7f4-4b03-9e99-dfa649c76d9a]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"8d1b1120-e7f4-4b03-9e99-dfa649c76d9a"}
{"@timestamp":"2025-06-12T23:06:08.284-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:08.285-0300","@version":"1","message":"Starting JWT validation [requestId=8be00ece-524a-4d21-b874-089f02106ce0]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"8be00ece-524a-4d21-b874-089f02106ce0"}
{"@timestamp":"2025-06-12T23:06:08.286-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=8be00ece-524a-4d21-b874-089f02106ce0]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"8be00ece-524a-4d21-b874-089f02106ce0"}
{"@timestamp":"2025-06-12T23:06:08.286-0300","@version":"1","message":"JWT validation successful [requestId=8be00ece-524a-4d21-b874-089f02106ce0]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000,"requestId":"8be00ece-524a-4d21-b874-089f02106ce0"}
{"@timestamp":"2025-06-12T23:06:08.292-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:08.293-0300","@version":"1","message":"Starting JWT validation [requestId=41cefa4a-424d-4533-838e-952b4acfe2ce]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"41cefa4a-424d-4533-838e-952b4acfe2ce"}
{"@timestamp":"2025-06-12T23:06:08.294-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=41cefa4a-424d-4533-838e-952b4acfe2ce]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"41cefa4a-424d-4533-838e-952b4acfe2ce"}
{"@timestamp":"2025-06-12T23:06:08.295-0300","@version":"1","message":"JWT validation successful [requestId=41cefa4a-424d-4533-838e-952b4acfe2ce]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000,"requestId":"41cefa4a-424d-4533-838e-952b4acfe2ce"}
{"@timestamp":"2025-06-12T23:06:08.304-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:08.306-0300","@version":"1","message":"Starting JWT validation [requestId=ffa9eaec-284b-433b-b33f-5b2665d33b01]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"ffa9eaec-284b-433b-b33f-5b2665d33b01"}
{"@timestamp":"2025-06-12T23:06:08.307-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=ffa9eaec-284b-433b-b33f-5b2665d33b01]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"ffa9eaec-284b-433b-b33f-5b2665d33b01"}
{"@timestamp":"2025-06-12T23:06:08.307-0300","@version":"1","message":"JWT validation successful [requestId=ffa9eaec-284b-433b-b33f-5b2665d33b01]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000,"requestId":"ffa9eaec-284b-433b-b33f-5b2665d33b01"}
{"@timestamp":"2025-06-12T23:06:08.313-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:08.314-0300","@version":"1","message":"Starting JWT validation [requestId=6bc3bf46-bf36-465f-9c12-a423be19f808]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"6bc3bf46-bf36-465f-9c12-a423be19f808"}
{"@timestamp":"2025-06-12T23:06:08.315-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=6bc3bf46-bf36-465f-9c12-a423be19f808]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"6bc3bf46-bf36-465f-9c12-a423be19f808"}
{"@timestamp":"2025-06-12T23:06:08.315-0300","@version":"1","message":"Invalid claim 'Role' with value 'InvalidRole' [requestId=6bc3bf46-bf36-465f-9c12-a423be19f808]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"6bc3bf46-bf36-465f-9c12-a423be19f808"}
{"@timestamp":"2025-06-12T23:06:08.316-0300","@version":"1","message":"JWT validation failed: Claim 'Role' é inválido [requestId=6bc3bf46-bf36-465f-9c12-a423be19f808]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"6bc3bf46-bf36-465f-9c12-a423be19f808"}
{"@timestamp":"2025-06-12T23:06:08.319-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:08.321-0300","@version":"1","message":"Starting JWT validation [requestId=e08cd64d-f3c2-421f-9cfb-9dcb5fbc2313]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"e08cd64d-f3c2-421f-9cfb-9dcb5fbc2313"}
{"@timestamp":"2025-06-12T23:06:08.322-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=e08cd64d-f3c2-421f-9cfb-9dcb5fbc2313]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"e08cd64d-f3c2-421f-9cfb-9dcb5fbc2313"}
{"@timestamp":"2025-06-12T23:06:08.322-0300","@version":"1","message":"Invalid claim 'Seed' with value '4' [requestId=e08cd64d-f3c2-421f-9cfb-9dcb5fbc2313]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"e08cd64d-f3c2-421f-9cfb-9dcb5fbc2313"}
{"@timestamp":"2025-06-12T23:06:08.323-0300","@version":"1","message":"JWT validation failed: Claim 'Seed' é inválido [requestId=e08cd64d-f3c2-421f-9cfb-9dcb5fbc2313]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"e08cd64d-f3c2-421f-9cfb-9dcb5fbc2313"}
{"@timestamp":"2025-06-12T23:06:08.332-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:08.341-0300","@version":"1","message":"Starting JWT validation [requestId=8e619a92-1076-45a3-8d81-dd01255cb846]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"8e619a92-1076-45a3-8d81-dd01255cb846"}
{"@timestamp":"2025-06-12T23:06:08.343-0300","@version":"1","message":"JWT validation failed: JWT inválido: payload não é um JSON válido [requestId=8e619a92-1076-45a3-8d81-dd01255cb846]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"8e619a92-1076-45a3-8d81-dd01255cb846"}
{"@timestamp":"2025-06-12T23:06:08.353-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:06:08.359-0300","@version":"1","message":"Starting JWT validation [requestId=4f658131-fa3f-40d1-b98f-db188b4155be]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"4f658131-fa3f-40d1-b98f-db188b4155be"}
{"@timestamp":"2025-06-12T23:06:08.359-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=4f658131-fa3f-40d1-b98f-db188b4155be]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"4f658131-fa3f-40d1-b98f-db188b4155be"}
{"@timestamp":"2025-06-12T23:06:08.360-0300","@version":"1","message":"JWT validation successful [requestId=4f658131-fa3f-40d1-b98f-db188b4155be]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000,"requestId":"4f658131-fa3f-40d1-b98f-db188b4155be"}
{"@timestamp":"2025-06-12T23:07:03.541-0300","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:03.592-0300","@version":"1","message":"Starting App using Java 21.0.7 with PID 25368 (C:\\Users\\luana\\Desktop\\java-project\\target\\classes started by luana in C:\\Users\\luana\\Desktop\\java-project)","logger_name":"com.example.App","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:03.592-0300","@version":"1","message":"Running with Spring Boot v3.2.2, Spring v6.1.3","logger_name":"com.example.App","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:03.593-0300","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.example.App","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:04.838-0300","@version":"1","message":"Tomcat initialized with port 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:04.848-0300","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:04.851-0300","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:04.851-0300","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:04.924-0300","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:04.925-0300","@version":"1","message":"Root WebApplicationContext: initialization completed in 1271 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:05.055-0300","@version":"1","message":"Filter 'requestLoggingFilter' configured for use","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:05.084-0300","@version":"1","message":"Base64JwtDecoder initialized","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:05.088-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:05.089-0300","@version":"1","message":"JwtController initialized","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:05.589-0300","@version":"1","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:05.626-0300","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:05.653-0300","@version":"1","message":"Tomcat started on port 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:05.667-0300","@version":"1","message":"Started App in 2.818 seconds (process running for 3.165)","logger_name":"com.example.App","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:13.927-0300","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:13.931-0300","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:13.935-0300","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:14.022-0300","@version":"1","message":"Before request [GET /swagger-ui.html, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", sec-ch-ua-platform:\"\"Windows\"\", upgrade-insecure-requests:\"1\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\", sec-fetch-site:\"none\", sec-fetch-mode:\"navigate\", sec-fetch-user:\"?1\", sec-fetch-dest:\"document\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.102-0300","@version":"1","message":"REQUEST DATA : GET /swagger-ui.html, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", sec-ch-ua-platform:\"\"Windows\"\", upgrade-insecure-requests:\"1\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\", sec-fetch-site:\"none\", sec-fetch-mode:\"navigate\", sec-fetch-user:\"?1\", sec-fetch-dest:\"document\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.121-0300","@version":"1","message":"Before request [GET /swagger-ui/index.html, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", upgrade-insecure-requests:\"1\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\", sec-fetch-site:\"none\", sec-fetch-mode:\"navigate\", sec-fetch-user:\"?1\", sec-fetch-dest:\"document\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", sec-ch-ua-platform:\"\"Windows\"\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\", if-modified-since:\"Wed, 11 Jun 2025 22:24:25 GMT\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.134-0300","@version":"1","message":"REQUEST DATA : GET /swagger-ui/index.html, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", upgrade-insecure-requests:\"1\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\", sec-fetch-site:\"none\", sec-fetch-mode:\"navigate\", sec-fetch-user:\"?1\", sec-fetch-dest:\"document\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", sec-ch-ua-platform:\"\"Windows\"\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\", if-modified-since:\"Wed, 11 Jun 2025 22:24:25 GMT\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.142-0300","@version":"1","message":"Before request [GET /swagger-ui/swagger-initializer.js, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"*/*\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"script\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.158-0300","@version":"1","message":"Before request [GET /swagger-ui/swagger-ui.css, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"text/css,*/*;q=0.1\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"style\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\", if-modified-since:\"Wed, 11 Jun 2025 22:24:25 GMT\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.160-0300","@version":"1","message":"Before request [GET /swagger-ui/index.css, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"text/css,*/*;q=0.1\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"style\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\", if-modified-since:\"Wed, 11 Jun 2025 22:24:25 GMT\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.158-0300","@version":"1","message":"Before request [GET /swagger-ui/swagger-ui-bundle.js, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"*/*\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"script\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\", if-modified-since:\"Wed, 11 Jun 2025 22:24:25 GMT\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.163-0300","@version":"1","message":"Before request [GET /swagger-ui/swagger-ui-standalone-preset.js, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"*/*\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"script\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\", if-modified-since:\"Wed, 11 Jun 2025 22:24:25 GMT\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.172-0300","@version":"1","message":"REQUEST DATA : GET /swagger-ui/swagger-ui-bundle.js, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"*/*\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"script\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\", if-modified-since:\"Wed, 11 Jun 2025 22:24:25 GMT\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.172-0300","@version":"1","message":"REQUEST DATA : GET /swagger-ui/index.css, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"text/css,*/*;q=0.1\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"style\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\", if-modified-since:\"Wed, 11 Jun 2025 22:24:25 GMT\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.174-0300","@version":"1","message":"REQUEST DATA : GET /swagger-ui/swagger-ui.css, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"text/css,*/*;q=0.1\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"style\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\", if-modified-since:\"Wed, 11 Jun 2025 22:24:25 GMT\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.175-0300","@version":"1","message":"REQUEST DATA : GET /swagger-ui/swagger-ui-standalone-preset.js, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"*/*\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"script\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\", if-modified-since:\"Wed, 11 Jun 2025 22:24:25 GMT\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.215-0300","@version":"1","message":"REQUEST DATA : GET /swagger-ui/swagger-initializer.js, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"*/*\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"script\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.221-0300","@version":"1","message":"Before request [GET /swagger-ui/swagger-initializer.js, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"*/*\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"script\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.225-0300","@version":"1","message":"REQUEST DATA : GET /swagger-ui/swagger-initializer.js, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"*/*\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"script\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-8","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.370-0300","@version":"1","message":"Before request [GET /api-docs/swagger-config, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"*/*\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"cors\", sec-fetch-dest:\"empty\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.382-0300","@version":"1","message":"REQUEST DATA : GET /api-docs/swagger-config, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"*/*\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"cors\", sec-fetch-dest:\"empty\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.424-0300","@version":"1","message":"Before request [GET /api-docs, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"application/json,*/*\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"cors\", sec-fetch-dest:\"empty\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-10","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.722-0300","@version":"1","message":"Init duration for springdoc-openapi is: 283 ms","logger_name":"org.springdoc.api.AbstractOpenApiResource","thread_name":"http-nio-8081-exec-10","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:07:14.757-0300","@version":"1","message":"REQUEST DATA : GET /api-docs, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"application/json,*/*\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"cors\", sec-fetch-dest:\"empty\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-10","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.761-0300","@version":"1","message":"Before request [GET /api-docs, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"application/json,*/*\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"cors\", sec-fetch-dest:\"empty\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:14.764-0300","@version":"1","message":"REQUEST DATA : GET /api-docs, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"application/json,*/*\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"cors\", sec-fetch-dest:\"empty\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:20.717-0300","@version":"1","message":"Before request [GET /api-docs, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", sec-ch-ua-platform:\"\"Windows\"\", upgrade-insecure-requests:\"1\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\", sec-fetch-site:\"none\", sec-fetch-mode:\"navigate\", sec-fetch-user:\"?1\", sec-fetch-dest:\"document\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:20.720-0300","@version":"1","message":"REQUEST DATA : GET /api-docs, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", sec-ch-ua-platform:\"\"Windows\"\", upgrade-insecure-requests:\"1\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\", sec-fetch-site:\"none\", sec-fetch-mode:\"navigate\", sec-fetch-user:\"?1\", sec-fetch-dest:\"document\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:20.813-0300","@version":"1","message":"Before request [GET /favicon.ico, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"image\", referer:\"http://localhost:8081/api-docs\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:20.821-0300","@version":"1","message":"REQUEST DATA : GET /favicon.ico, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"image\", referer:\"http://localhost:8081/api-docs\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-6","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:29.481-0300","@version":"1","message":"Before request [GET /api/v1/jwt/validate, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", sec-ch-ua-platform:\"\"Windows\"\", upgrade-insecure-requests:\"1\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\", sec-fetch-site:\"none\", sec-fetch-mode:\"navigate\", sec-fetch-user:\"?1\", sec-fetch-dest:\"document\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:07:29.485-0300","@version":"1","message":"Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]","logger_name":"org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver","thread_name":"http-nio-8081-exec-5","level":"WARN","level_value":30000}
{"@timestamp":"2025-06-12T23:07:29.488-0300","@version":"1","message":"REQUEST DATA : GET /api/v1/jwt/validate, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", sec-ch-ua-platform:\"\"Windows\"\", upgrade-insecure-requests:\"1\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\", sec-fetch-site:\"none\", sec-fetch-mode:\"navigate\", sec-fetch-user:\"?1\", sec-fetch-dest:\"document\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-5","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:08:19.380-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", content-length:\"152\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"application/json\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", origin:\"http://localhost:8081\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"cors\", sec-fetch-dest:\"empty\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\", Content-Type:\"application/json;charset=UTF-8\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:08:19.475-0300","@version":"1","message":"Received JWT validation request [requestId=21720f4d-e23f-4906-8f9b-57d9e19339fa]","logger_name":"com.example.controller.JwtController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"requestId":"21720f4d-e23f-4906-8f9b-57d9e19339fa"}
{"@timestamp":"2025-06-12T23:08:19.475-0300","@version":"1","message":"JWT length: 137 [requestId=21720f4d-e23f-4906-8f9b-57d9e19339fa]","logger_name":"com.example.controller.JwtController","thread_name":"http-nio-8081-exec-9","level":"DEBUG","level_value":10000,"requestId":"21720f4d-e23f-4906-8f9b-57d9e19339fa"}
{"@timestamp":"2025-06-12T23:08:19.475-0300","@version":"1","message":"Starting JWT validation [requestId=06b6d68f-285d-4f49-8b1c-6b479d0f6cc5]","logger_name":"com.example.service.JwtValidationService","thread_name":"http-nio-8081-exec-9","level":"DEBUG","level_value":10000,"requestId":"06b6d68f-285d-4f49-8b1c-6b479d0f6cc5"}
{"@timestamp":"2025-06-12T23:08:19.475-0300","@version":"1","message":"Starting JWT decoding [requestId=06b6d68f-285d-4f49-8b1c-6b479d0f6cc5]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"http-nio-8081-exec-9","level":"DEBUG","level_value":10000,"requestId":"06b6d68f-285d-4f49-8b1c-6b479d0f6cc5"}
{"@timestamp":"2025-06-12T23:08:19.480-0300","@version":"1","message":"Successfully decoded JWT with 3 claims [requestId=06b6d68f-285d-4f49-8b1c-6b479d0f6cc5]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"http-nio-8081-exec-9","level":"DEBUG","level_value":10000,"requestId":"06b6d68f-285d-4f49-8b1c-6b479d0f6cc5"}
{"@timestamp":"2025-06-12T23:08:19.480-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=06b6d68f-285d-4f49-8b1c-6b479d0f6cc5]","logger_name":"com.example.service.JwtValidationService","thread_name":"http-nio-8081-exec-9","level":"DEBUG","level_value":10000,"requestId":"06b6d68f-285d-4f49-8b1c-6b479d0f6cc5"}
{"@timestamp":"2025-06-12T23:08:19.480-0300","@version":"1","message":"JWT validation successful [requestId=06b6d68f-285d-4f49-8b1c-6b479d0f6cc5]","logger_name":"com.example.service.JwtValidationService","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000,"requestId":"06b6d68f-285d-4f49-8b1c-6b479d0f6cc5"}
{"@timestamp":"2025-06-12T23:08:19.484-0300","@version":"1","message":"JWT validation completed - Result: VALID [requestId=21720f4d-e23f-4906-8f9b-57d9e19339fa]","logger_name":"com.example.controller.JwtController","thread_name":"http-nio-8081-exec-9","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:08:19.484-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", content-length:\"152\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"application/json\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", origin:\"http://localhost:8081\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"cors\", sec-fetch-dest:\"empty\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\", Content-Type:\"application/json;charset=UTF-8\"], payload={\n  \"jwt\": \"eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJTZWVkIjoiNzg0MSIsIk5hbWUiOiJUb25pbmhvIEFyYXVqbyJ9.QY05sIjtrcJnP533kQNk8QXcaleJ1Q01jWY_ZzIZuAg\"\n}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-9","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:36.847-0300","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:36.910-0300","@version":"1","message":"Starting AppTest using Java 21.0.7 with PID 26140 (started by luana in C:\\Users\\luana\\Desktop\\java-project)","logger_name":"com.example.AppTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:36.910-0300","@version":"1","message":"Running with Spring Boot v3.2.2, Spring v6.1.3","logger_name":"com.example.AppTest","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:36.914-0300","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.example.AppTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:39.518-0300","@version":"1","message":"Base64JwtDecoder initialized","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:39.525-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:39.527-0300","@version":"1","message":"JwtController initialized","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:40.706-0300","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:40.815-0300","@version":"1","message":"Started AppTest in 4.81 seconds (process running for 6.445)","logger_name":"com.example.AppTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:42.053-0300","@version":"1","message":"Starting JWT validation [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:42.053-0300","@version":"1","message":"Starting JWT decoding [requestId=null]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:42.056-0300","@version":"1","message":"Failed to parse JSON payload [requestId=null]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'u': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"u�\\u001D~��Ȕ��\\u001AȎ��Y\\u001BZ[��\\u0008�ٮB#�#s�C\\u0012\"�$�\\u0016�R#�%F����\\u0004\\u0017&\\u0017V��'\"; line: 1, column: 2]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2477)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:760)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(ReaderBasedJsonParser.java:3041)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:2082)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:808)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4912)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4818)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3755)\r\n\tat com.example.service.decoder.Base64JwtDecoder.decode(Base64JwtDecoder.java:46)\r\n\tat com.example.service.JwtValidationService.validateJwt(JwtValidationService.java:54)\r\n\tat com.example.AppTest.testCaso2_JWTInvalido(AppTest.java:25)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)\r\n"}
{"@timestamp":"2025-06-12T23:25:42.072-0300","@version":"1","message":"JWT validation failed: JWT inválido: payload não é um JSON válido [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-06-12T23:25:42.108-0300","@version":"1","message":"Starting JWT validation [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:42.108-0300","@version":"1","message":"Starting JWT decoding [requestId=null]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:42.134-0300","@version":"1","message":"Successfully decoded JWT with 4 claims [requestId=null]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:42.134-0300","@version":"1","message":"JWT decoded successfully, found 4 claims [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:42.137-0300","@version":"1","message":"Invalid number of claims: expected 3, found 4 [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-06-12T23:25:42.137-0300","@version":"1","message":"JWT validation failed: JWT deve conter exatamente 3 claims (Name, Role, Seed) [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-06-12T23:25:42.145-0300","@version":"1","message":"Starting JWT validation [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:42.145-0300","@version":"1","message":"Starting JWT decoding [requestId=null]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:42.146-0300","@version":"1","message":"Successfully decoded JWT with 3 claims [requestId=null]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:42.146-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:42.146-0300","@version":"1","message":"JWT validation successful [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:42.157-0300","@version":"1","message":"Starting JWT validation [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:42.157-0300","@version":"1","message":"Starting JWT decoding [requestId=null]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:42.157-0300","@version":"1","message":"Successfully decoded JWT with 3 claims [requestId=null]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:42.157-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:42.157-0300","@version":"1","message":"Invalid claim 'Name' with value 'M4ria Olivia' [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-06-12T23:25:42.157-0300","@version":"1","message":"JWT validation failed: Claim 'Name' é inválido [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-06-12T23:25:42.176-0300","@version":"1","message":"Could not detect default configuration classes for test class [com.example.controller.JwtControllerIntegrationTest]: JwtControllerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:42.210-0300","@version":"1","message":"Found @SpringBootConfiguration com.example.App for test class com.example.controller.JwtControllerIntegrationTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:42.288-0300","@version":"1","message":"Starting JwtControllerIntegrationTest using Java 21.0.7 with PID 26140 (started by luana in C:\\Users\\luana\\Desktop\\java-project)","logger_name":"com.example.controller.JwtControllerIntegrationTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:42.288-0300","@version":"1","message":"Running with Spring Boot v3.2.2, Spring v6.1.3","logger_name":"com.example.controller.JwtControllerIntegrationTest","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:42.288-0300","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.example.controller.JwtControllerIntegrationTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:42.723-0300","@version":"1","message":"Base64JwtDecoder initialized","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:42.724-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:42.726-0300","@version":"1","message":"JwtController initialized","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:42.972-0300","@version":"1","message":"Filter 'requestLoggingFilter' configured for use","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:42.972-0300","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.boot.test.mock.web.SpringBootMockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:42.972-0300","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:42.976-0300","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:42.983-0300","@version":"1","message":"Completed initialization in 11 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:43.008-0300","@version":"1","message":"Started JwtControllerIntegrationTest in 0.777 seconds (process running for 8.639)","logger_name":"com.example.controller.JwtControllerIntegrationTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:43.159-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"155\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:43.298-0300","@version":"1","message":"Received JWT validation request [requestId=52a62a6c-46aa-4cdd-a8b9-15e16772806c]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000,"requestId":"52a62a6c-46aa-4cdd-a8b9-15e16772806c"}
{"@timestamp":"2025-06-12T23:25:43.298-0300","@version":"1","message":"Starting JWT validation [requestId=52a62a6c-46aa-4cdd-a8b9-15e16772806c]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"52a62a6c-46aa-4cdd-a8b9-15e16772806c"}
{"@timestamp":"2025-06-12T23:25:43.298-0300","@version":"1","message":"Starting JWT decoding [requestId=52a62a6c-46aa-4cdd-a8b9-15e16772806c]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"52a62a6c-46aa-4cdd-a8b9-15e16772806c"}
{"@timestamp":"2025-06-12T23:25:43.298-0300","@version":"1","message":"Failed to parse JSON payload [requestId=52a62a6c-46aa-4cdd-a8b9-15e16772806c]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'u': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"u�\\u001D~��Ȕ��\\u001AȎ��Y\\u001BZ[��\\u0008�ٮB#�#s�C\\u0012\"�$�\\u0016�R#�%F����\\u0004\\u0017&\\u0017V��'\"; line: 1, column: 2]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2477)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:760)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(ReaderBasedJsonParser.java:3041)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:2082)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:808)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4912)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4818)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3755)\r\n\tat com.example.service.decoder.Base64JwtDecoder.decode(Base64JwtDecoder.java:46)\r\n\tat com.example.service.JwtValidationService.validateJwt(JwtValidationService.java:54)\r\n\tat com.example.controller.JwtController.validateJwt(JwtController.java:76)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\tat org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\tat org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:289)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)\r\n\tat com.example.controller.JwtControllerIntegrationTest.testJwtInvalidoDeveRetornarErro(JwtControllerIntegrationTest.java:45)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)\r\n","requestId":"52a62a6c-46aa-4cdd-a8b9-15e16772806c"}
{"@timestamp":"2025-06-12T23:25:43.304-0300","@version":"1","message":"JWT validation failed: JWT inválido: payload não é um JSON válido [requestId=52a62a6c-46aa-4cdd-a8b9-15e16772806c]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"52a62a6c-46aa-4cdd-a8b9-15e16772806c"}
{"@timestamp":"2025-06-12T23:25:43.304-0300","@version":"1","message":"JWT validation failed: JWT inválido: payload não é um JSON válido [requestId=52a62a6c-46aa-4cdd-a8b9-15e16772806c]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"WARN","level_value":30000,"requestId":"52a62a6c-46aa-4cdd-a8b9-15e16772806c"}
{"@timestamp":"2025-06-12T23:25:43.323-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"155\"], payload={\"jwt\":\"eyJhbGciOiJzI1NiJ9.dfsdfsfryJSr2xrIjoiQWRtaW4iLCJTZrkIjoiNzg0MSIsIk5hbrUiOiJUb25pbmhvIEFyYXVqbyJ9.QY05fsdfsIjtrcJnP533kQNk8QXcaleJ1Q01jWY_ZzIZuAg\"}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:43.398-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"150\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:43.398-0300","@version":"1","message":"Received JWT validation request [requestId=b13e0acb-7660-4ad6-a650-f782c090fb8c]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000,"requestId":"b13e0acb-7660-4ad6-a650-f782c090fb8c"}
{"@timestamp":"2025-06-12T23:25:43.398-0300","@version":"1","message":"Starting JWT validation [requestId=b13e0acb-7660-4ad6-a650-f782c090fb8c]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"b13e0acb-7660-4ad6-a650-f782c090fb8c"}
{"@timestamp":"2025-06-12T23:25:43.398-0300","@version":"1","message":"Starting JWT decoding [requestId=b13e0acb-7660-4ad6-a650-f782c090fb8c]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"b13e0acb-7660-4ad6-a650-f782c090fb8c"}
{"@timestamp":"2025-06-12T23:25:43.401-0300","@version":"1","message":"Successfully decoded JWT with 3 claims [requestId=b13e0acb-7660-4ad6-a650-f782c090fb8c]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"b13e0acb-7660-4ad6-a650-f782c090fb8c"}
{"@timestamp":"2025-06-12T23:25:43.401-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=b13e0acb-7660-4ad6-a650-f782c090fb8c]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"b13e0acb-7660-4ad6-a650-f782c090fb8c"}
{"@timestamp":"2025-06-12T23:25:43.401-0300","@version":"1","message":"Invalid claim 'Name' with value 'M4ria Olivia' [requestId=b13e0acb-7660-4ad6-a650-f782c090fb8c]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"b13e0acb-7660-4ad6-a650-f782c090fb8c"}
{"@timestamp":"2025-06-12T23:25:43.402-0300","@version":"1","message":"JWT validation failed: Claim 'Name' é inválido [requestId=b13e0acb-7660-4ad6-a650-f782c090fb8c]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"b13e0acb-7660-4ad6-a650-f782c090fb8c"}
{"@timestamp":"2025-06-12T23:25:43.402-0300","@version":"1","message":"JWT validation failed: Claim 'Name' é inválido [requestId=b13e0acb-7660-4ad6-a650-f782c090fb8c]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"WARN","level_value":30000,"requestId":"b13e0acb-7660-4ad6-a650-f782c090fb8c"}
{"@timestamp":"2025-06-12T23:25:43.407-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"150\"], payload={\"jwt\":\"eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiRXh0ZXJuYWwiLCJTZWVkIjoiODgwMzciLCJOYW1lIjoiTTRyaWEgT2xpdmlhIn0.6YD73XWZYQSSMDf6H0i3-kylz1-TY_Yt6h1cV2Ku-Qs\"}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:43.420-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"2\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:43.443-0300","@version":"1","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.controller.dto.JwtValidationResponse> com.example.controller.JwtController.validateJwt(com.example.controller.dto.JwtValidationRequest,org.springframework.web.context.request.WebRequest): [Field error in object 'jwtValidationRequest' on field 'jwt': rejected value [null]; codes [NotBlank.jwtValidationRequest.jwt,NotBlank.jwt,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [jwtValidationRequest.jwt,jwt]; arguments []; default message [jwt]]; default message [O JWT não pode estar vazio]] ]","logger_name":"org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-06-12T23:25:43.445-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"2\"], payload={}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:43.457-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"147\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:43.460-0300","@version":"1","message":"Received JWT validation request [requestId=ba486241-225c-4022-a181-a11d9156bffe]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000,"requestId":"ba486241-225c-4022-a181-a11d9156bffe"}
{"@timestamp":"2025-06-12T23:25:43.460-0300","@version":"1","message":"Starting JWT validation [requestId=ba486241-225c-4022-a181-a11d9156bffe]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"ba486241-225c-4022-a181-a11d9156bffe"}
{"@timestamp":"2025-06-12T23:25:43.460-0300","@version":"1","message":"Starting JWT decoding [requestId=ba486241-225c-4022-a181-a11d9156bffe]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"ba486241-225c-4022-a181-a11d9156bffe"}
{"@timestamp":"2025-06-12T23:25:43.460-0300","@version":"1","message":"Successfully decoded JWT with 3 claims [requestId=ba486241-225c-4022-a181-a11d9156bffe]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"ba486241-225c-4022-a181-a11d9156bffe"}
{"@timestamp":"2025-06-12T23:25:43.462-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=ba486241-225c-4022-a181-a11d9156bffe]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"ba486241-225c-4022-a181-a11d9156bffe"}
{"@timestamp":"2025-06-12T23:25:43.462-0300","@version":"1","message":"JWT validation successful [requestId=ba486241-225c-4022-a181-a11d9156bffe]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000,"requestId":"ba486241-225c-4022-a181-a11d9156bffe"}
{"@timestamp":"2025-06-12T23:25:43.462-0300","@version":"1","message":"JWT validation completed - Result: VALID [requestId=ba486241-225c-4022-a181-a11d9156bffe]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000,"requestId":"ba486241-225c-4022-a181-a11d9156bffe"}
{"@timestamp":"2025-06-12T23:25:43.464-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"147\"], payload={\"jwt\":\"eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJTZWVkIjoiNzg0MSIsIk5hbWUiOiJUb25pbmhvIEFyYXVqbyJ9.QY05sIjtrcJnP533kQNk8QXcaleJ1Q01jWY_ZzIZuAg\"}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:43.477-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"163\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:43.478-0300","@version":"1","message":"Received JWT validation request [requestId=c0baca3a-cde2-486d-a4f7-a54c68108615]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000,"requestId":"c0baca3a-cde2-486d-a4f7-a54c68108615"}
{"@timestamp":"2025-06-12T23:25:43.478-0300","@version":"1","message":"Starting JWT validation [requestId=c0baca3a-cde2-486d-a4f7-a54c68108615]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"c0baca3a-cde2-486d-a4f7-a54c68108615"}
{"@timestamp":"2025-06-12T23:25:43.478-0300","@version":"1","message":"Starting JWT decoding [requestId=c0baca3a-cde2-486d-a4f7-a54c68108615]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"c0baca3a-cde2-486d-a4f7-a54c68108615"}
{"@timestamp":"2025-06-12T23:25:43.480-0300","@version":"1","message":"Successfully decoded JWT with 4 claims [requestId=c0baca3a-cde2-486d-a4f7-a54c68108615]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"c0baca3a-cde2-486d-a4f7-a54c68108615"}
{"@timestamp":"2025-06-12T23:25:43.480-0300","@version":"1","message":"JWT decoded successfully, found 4 claims [requestId=c0baca3a-cde2-486d-a4f7-a54c68108615]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"c0baca3a-cde2-486d-a4f7-a54c68108615"}
{"@timestamp":"2025-06-12T23:25:43.480-0300","@version":"1","message":"Invalid number of claims: expected 3, found 4 [requestId=c0baca3a-cde2-486d-a4f7-a54c68108615]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"c0baca3a-cde2-486d-a4f7-a54c68108615"}
{"@timestamp":"2025-06-12T23:25:43.480-0300","@version":"1","message":"JWT validation failed: JWT deve conter exatamente 3 claims (Name, Role, Seed) [requestId=c0baca3a-cde2-486d-a4f7-a54c68108615]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"WARN","level_value":30000,"requestId":"c0baca3a-cde2-486d-a4f7-a54c68108615"}
{"@timestamp":"2025-06-12T23:25:43.482-0300","@version":"1","message":"JWT validation failed: JWT deve conter exatamente 3 claims (Name, Role, Seed) [requestId=c0baca3a-cde2-486d-a4f7-a54c68108615]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"WARN","level_value":30000,"requestId":"c0baca3a-cde2-486d-a4f7-a54c68108615"}
{"@timestamp":"2025-06-12T23:25:43.488-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"163\"], payload={\"jwt\":\"eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiTWVtYmVyIiwiT3JnIjoiQlIiLCJTZWVkIjoiMTQ2MjciLCJOYW1lIjoiVmFsZGlyIEFyYW5oYSJ9.cmrXV_Flm5mfdpfNUVopY_I2zeJUy4EZ4i3Fea98zvY\"}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:25:44.226-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:44.278-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:44.295-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:44.307-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:44.325-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:44.336-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:44.357-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:44.367-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:44.378-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:44.391-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:44.406-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:44.415-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:25:44.434-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:44.501-0300","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:44.552-0300","@version":"1","message":"Starting AppTest using Java 21.0.7 with PID 11164 (started by luana in C:\\Users\\luana\\Desktop\\java-project)","logger_name":"com.example.AppTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:44.552-0300","@version":"1","message":"Running with Spring Boot v3.2.2, Spring v6.1.3","logger_name":"com.example.AppTest","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:44.554-0300","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.example.AppTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:47.122-0300","@version":"1","message":"Base64JwtDecoder initialized","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:47.130-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:47.132-0300","@version":"1","message":"JwtController initialized","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:48.422-0300","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:48.521-0300","@version":"1","message":"Started AppTest in 4.786 seconds (process running for 6.232)","logger_name":"com.example.AppTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:49.879-0300","@version":"1","message":"Starting JWT validation [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:49.879-0300","@version":"1","message":"Starting JWT decoding [requestId=null]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:49.893-0300","@version":"1","message":"Failed to parse JSON payload [requestId=null]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'u': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"u�\\u001D~��Ȕ��\\u001AȎ��Y\\u001BZ[��\\u0008�ٮB#�#s�C\\u0012\"�$�\\u0016�R#�%F����\\u0004\\u0017&\\u0017V��'\"; line: 1, column: 2]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2477)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:760)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(ReaderBasedJsonParser.java:3041)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:2082)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:808)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4912)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4818)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3755)\r\n\tat com.example.service.decoder.Base64JwtDecoder.decode(Base64JwtDecoder.java:46)\r\n\tat com.example.service.JwtValidationService.validateJwt(JwtValidationService.java:51)\r\n\tat com.example.AppTest.testCaso2_JWTInvalido(AppTest.java:25)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)\r\n"}
{"@timestamp":"2025-06-12T23:27:49.951-0300","@version":"1","message":"Starting JWT validation [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:49.955-0300","@version":"1","message":"Starting JWT decoding [requestId=null]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:49.974-0300","@version":"1","message":"Successfully decoded JWT with 4 claims [requestId=null]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:49.974-0300","@version":"1","message":"JWT decoded successfully, found 4 claims [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:49.982-0300","@version":"1","message":"Starting JWT validation [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:49.982-0300","@version":"1","message":"Starting JWT decoding [requestId=null]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:49.982-0300","@version":"1","message":"Successfully decoded JWT with 3 claims [requestId=null]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:49.982-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:49.996-0300","@version":"1","message":"Starting JWT validation [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:49.996-0300","@version":"1","message":"Starting JWT decoding [requestId=null]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:49.996-0300","@version":"1","message":"Successfully decoded JWT with 3 claims [requestId=null]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:49.996-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=null]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:50.015-0300","@version":"1","message":"Could not detect default configuration classes for test class [com.example.controller.JwtControllerIntegrationTest]: JwtControllerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.","logger_name":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:50.055-0300","@version":"1","message":"Found @SpringBootConfiguration com.example.App for test class com.example.controller.JwtControllerIntegrationTest","logger_name":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:50.137-0300","@version":"1","message":"Starting JwtControllerIntegrationTest using Java 21.0.7 with PID 11164 (started by luana in C:\\Users\\luana\\Desktop\\java-project)","logger_name":"com.example.controller.JwtControllerIntegrationTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:50.137-0300","@version":"1","message":"Running with Spring Boot v3.2.2, Spring v6.1.3","logger_name":"com.example.controller.JwtControllerIntegrationTest","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:50.141-0300","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.example.controller.JwtControllerIntegrationTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:50.558-0300","@version":"1","message":"Base64JwtDecoder initialized","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:50.558-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:50.558-0300","@version":"1","message":"JwtController initialized","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:50.803-0300","@version":"1","message":"Filter 'requestLoggingFilter' configured for use","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:50.805-0300","@version":"1","message":"Initializing Spring TestDispatcherServlet ''","logger_name":"org.springframework.boot.test.mock.web.SpringBootMockServletContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:50.805-0300","@version":"1","message":"Initializing Servlet ''","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:50.809-0300","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:50.814-0300","@version":"1","message":"Completed initialization in 9 ms","logger_name":"org.springframework.test.web.servlet.TestDispatcherServlet","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:50.831-0300","@version":"1","message":"Started JwtControllerIntegrationTest in 0.76 seconds (process running for 8.542)","logger_name":"com.example.controller.JwtControllerIntegrationTest","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:27:50.971-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"155\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:51.120-0300","@version":"1","message":"Received JWT validation request [requestId=c28f0519-be0c-4f0b-a311-ecc55415d378]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000,"requestId":"c28f0519-be0c-4f0b-a311-ecc55415d378"}
{"@timestamp":"2025-06-12T23:27:51.120-0300","@version":"1","message":"Starting JWT validation [requestId=c28f0519-be0c-4f0b-a311-ecc55415d378]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"c28f0519-be0c-4f0b-a311-ecc55415d378"}
{"@timestamp":"2025-06-12T23:27:51.120-0300","@version":"1","message":"Starting JWT decoding [requestId=c28f0519-be0c-4f0b-a311-ecc55415d378]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"c28f0519-be0c-4f0b-a311-ecc55415d378"}
{"@timestamp":"2025-06-12T23:27:51.120-0300","@version":"1","message":"Failed to parse JSON payload [requestId=c28f0519-be0c-4f0b-a311-ecc55415d378]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'u': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (String)\"u�\\u001D~��Ȕ��\\u001AȎ��Y\\u001BZ[��\\u0008�ٮB#�#s�C\\u0012\"�$�\\u0016�R#�%F����\\u0004\\u0017&\\u0017V��'\"; line: 1, column: 2]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2477)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:760)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(ReaderBasedJsonParser.java:3041)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:2082)\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:808)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4912)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4818)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3755)\r\n\tat com.example.service.decoder.Base64JwtDecoder.decode(Base64JwtDecoder.java:46)\r\n\tat com.example.service.JwtValidationService.validateJwt(JwtValidationService.java:51)\r\n\tat com.example.controller.JwtController.validateJwt(JwtController.java:76)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\tat org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\tat org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.web.filter.AbstractRequestLoggingFilter.doFilterInternal(AbstractRequestLoggingFilter.java:289)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:151)\r\n\tat org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)\r\n\tat org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)\r\n\tat com.example.controller.JwtControllerIntegrationTest.testJwtInvalidoDeveRetornarErro(JwtControllerIntegrationTest.java:45)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\r\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\r\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\r\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)\r\n","requestId":"c28f0519-be0c-4f0b-a311-ecc55415d378"}
{"@timestamp":"2025-06-12T23:27:51.122-0300","@version":"1","message":"JWT validation failed: JWT inválido: payload não é um JSON válido [requestId=c28f0519-be0c-4f0b-a311-ecc55415d378]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"WARN","level_value":30000,"requestId":"c28f0519-be0c-4f0b-a311-ecc55415d378"}
{"@timestamp":"2025-06-12T23:27:51.151-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"155\"], payload={\"jwt\":\"eyJhbGciOiJzI1NiJ9.dfsdfsfryJSr2xrIjoiQWRtaW4iLCJTZrkIjoiNzg0MSIsIk5hbrUiOiJUb25pbmhvIEFyYXVqbyJ9.QY05fsdfsIjtrcJnP533kQNk8QXcaleJ1Q01jWY_ZzIZuAg\"}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:51.220-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"150\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:51.222-0300","@version":"1","message":"Received JWT validation request [requestId=211df557-3dde-4ffe-82ad-70b6a76de6b8]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000,"requestId":"211df557-3dde-4ffe-82ad-70b6a76de6b8"}
{"@timestamp":"2025-06-12T23:27:51.224-0300","@version":"1","message":"Starting JWT validation [requestId=211df557-3dde-4ffe-82ad-70b6a76de6b8]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"211df557-3dde-4ffe-82ad-70b6a76de6b8"}
{"@timestamp":"2025-06-12T23:27:51.224-0300","@version":"1","message":"Starting JWT decoding [requestId=211df557-3dde-4ffe-82ad-70b6a76de6b8]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"211df557-3dde-4ffe-82ad-70b6a76de6b8"}
{"@timestamp":"2025-06-12T23:27:51.228-0300","@version":"1","message":"Successfully decoded JWT with 3 claims [requestId=211df557-3dde-4ffe-82ad-70b6a76de6b8]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"211df557-3dde-4ffe-82ad-70b6a76de6b8"}
{"@timestamp":"2025-06-12T23:27:51.228-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=211df557-3dde-4ffe-82ad-70b6a76de6b8]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"211df557-3dde-4ffe-82ad-70b6a76de6b8"}
{"@timestamp":"2025-06-12T23:27:51.228-0300","@version":"1","message":"JWT validation failed: Claim 'Name' é inválido [requestId=211df557-3dde-4ffe-82ad-70b6a76de6b8]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"WARN","level_value":30000,"requestId":"211df557-3dde-4ffe-82ad-70b6a76de6b8"}
{"@timestamp":"2025-06-12T23:27:51.228-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"150\"], payload={\"jwt\":\"eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiRXh0ZXJuYWwiLCJTZWVkIjoiODgwMzciLCJOYW1lIjoiTTRyaWEgT2xpdmlhIn0.6YD73XWZYQSSMDf6H0i3-kylz1-TY_Yt6h1cV2Ku-Qs\"}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:51.243-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"2\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:51.261-0300","@version":"1","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.controller.dto.JwtValidationResponse> com.example.controller.JwtController.validateJwt(com.example.controller.dto.JwtValidationRequest,org.springframework.web.context.request.WebRequest): [Field error in object 'jwtValidationRequest' on field 'jwt': rejected value [null]; codes [NotBlank.jwtValidationRequest.jwt,NotBlank.jwt,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [jwtValidationRequest.jwt,jwt]; arguments []; default message [jwt]]; default message [O JWT não pode estar vazio]] ]","logger_name":"org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2025-06-12T23:27:51.261-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"2\"], payload={}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:51.273-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"147\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:51.275-0300","@version":"1","message":"Received JWT validation request [requestId=c2ded54b-c0aa-47d2-a3b3-bd912b36129c]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000,"requestId":"c2ded54b-c0aa-47d2-a3b3-bd912b36129c"}
{"@timestamp":"2025-06-12T23:27:51.276-0300","@version":"1","message":"Starting JWT validation [requestId=c2ded54b-c0aa-47d2-a3b3-bd912b36129c]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"c2ded54b-c0aa-47d2-a3b3-bd912b36129c"}
{"@timestamp":"2025-06-12T23:27:51.276-0300","@version":"1","message":"Starting JWT decoding [requestId=c2ded54b-c0aa-47d2-a3b3-bd912b36129c]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"c2ded54b-c0aa-47d2-a3b3-bd912b36129c"}
{"@timestamp":"2025-06-12T23:27:51.276-0300","@version":"1","message":"Successfully decoded JWT with 3 claims [requestId=c2ded54b-c0aa-47d2-a3b3-bd912b36129c]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"c2ded54b-c0aa-47d2-a3b3-bd912b36129c"}
{"@timestamp":"2025-06-12T23:27:51.276-0300","@version":"1","message":"JWT decoded successfully, found 3 claims [requestId=c2ded54b-c0aa-47d2-a3b3-bd912b36129c]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"c2ded54b-c0aa-47d2-a3b3-bd912b36129c"}
{"@timestamp":"2025-06-12T23:27:51.276-0300","@version":"1","message":"JWT validation completed - Result: VALID [requestId=c2ded54b-c0aa-47d2-a3b3-bd912b36129c]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000,"requestId":"c2ded54b-c0aa-47d2-a3b3-bd912b36129c"}
{"@timestamp":"2025-06-12T23:27:51.277-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"147\"], payload={\"jwt\":\"eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJTZWVkIjoiNzg0MSIsIk5hbWUiOiJUb25pbmhvIEFyYXVqbyJ9.QY05sIjtrcJnP533kQNk8QXcaleJ1Q01jWY_ZzIZuAg\"}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:51.300-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"163\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:27:51.306-0300","@version":"1","message":"Received JWT validation request [requestId=9d289067-f0cd-4fd7-8976-75ba894d22f8]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000,"requestId":"9d289067-f0cd-4fd7-8976-75ba894d22f8"}
{"@timestamp":"2025-06-12T23:27:51.306-0300","@version":"1","message":"Starting JWT validation [requestId=9d289067-f0cd-4fd7-8976-75ba894d22f8]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"9d289067-f0cd-4fd7-8976-75ba894d22f8"}
{"@timestamp":"2025-06-12T23:27:51.306-0300","@version":"1","message":"Starting JWT decoding [requestId=9d289067-f0cd-4fd7-8976-75ba894d22f8]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"9d289067-f0cd-4fd7-8976-75ba894d22f8"}
{"@timestamp":"2025-06-12T23:27:51.307-0300","@version":"1","message":"Successfully decoded JWT with 4 claims [requestId=9d289067-f0cd-4fd7-8976-75ba894d22f8]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"9d289067-f0cd-4fd7-8976-75ba894d22f8"}
{"@timestamp":"2025-06-12T23:27:51.307-0300","@version":"1","message":"JWT decoded successfully, found 4 claims [requestId=9d289067-f0cd-4fd7-8976-75ba894d22f8]","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"DEBUG","level_value":10000,"requestId":"9d289067-f0cd-4fd7-8976-75ba894d22f8"}
{"@timestamp":"2025-06-12T23:27:51.307-0300","@version":"1","message":"JWT validation failed: JWT deve conter exatamente 3 claims (Name, Role, Seed) [requestId=9d289067-f0cd-4fd7-8976-75ba894d22f8]","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"WARN","level_value":30000,"requestId":"9d289067-f0cd-4fd7-8976-75ba894d22f8"}
{"@timestamp":"2025-06-12T23:27:51.308-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=127.0.0.1, headers=[Content-Type:\"application/json;charset=UTF-8\", Content-Length:\"163\"], payload={\"jwt\":\"eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiTWVtYmVyIiwiT3JnIjoiQlIiLCJTZWVkIjoiMTQ2MjciLCJOYW1lIjoiVmFsZGlyIEFyYW5oYSJ9.cmrXV_Flm5mfdpfNUVopY_I2zeJUy4EZ4i3Fea98zvY\"}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:32:15.523-0300","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:32:15.573-0300","@version":"1","message":"Starting App using Java 21.0.7 with PID 25652 (C:\\Users\\luana\\Desktop\\java-project\\target\\classes started by luana in C:\\Users\\luana\\Desktop\\java-project)","logger_name":"com.example.App","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:32:15.575-0300","@version":"1","message":"Running with Spring Boot v3.2.2, Spring v6.1.3","logger_name":"com.example.App","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:32:15.576-0300","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.example.App","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:32:17.068-0300","@version":"1","message":"Tomcat initialized with port 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:32:17.085-0300","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:32:17.087-0300","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:32:17.087-0300","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.18]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:32:17.174-0300","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:32:17.176-0300","@version":"1","message":"Root WebApplicationContext: initialization completed in 1542 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:32:17.613-0300","@version":"1","message":"Filter 'requestLoggingFilter' configured for use","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"main","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:32:17.646-0300","@version":"1","message":"Base64JwtDecoder initialized","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:32:17.650-0300","@version":"1","message":"JwtValidationService initialized with 3 validators","logger_name":"com.example.service.JwtValidationService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:32:17.652-0300","@version":"1","message":"JwtController initialized","logger_name":"com.example.controller.JwtController","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:32:18.173-0300","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:32:18.212-0300","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:32:18.244-0300","@version":"1","message":"Tomcat started on port 8081 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:32:18.253-0300","@version":"1","message":"Started App in 3.447 seconds (process running for 3.807)","logger_name":"com.example.App","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:33:41.647-0300","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:33:41.647-0300","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:33:41.648-0300","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:33:41.725-0300","@version":"1","message":"Before request [GET /swagger-ui/swagger-initializer.js, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"*/*\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"script\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:33:41.822-0300","@version":"1","message":"REQUEST DATA : GET /swagger-ui/swagger-initializer.js, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"*/*\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"script\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-1","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:33:41.866-0300","@version":"1","message":"Before request [GET /api-docs/swagger-config, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"*/*\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"cors\", sec-fetch-dest:\"empty\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:33:41.878-0300","@version":"1","message":"Before request [GET /swagger-ui/favicon-32x32.png, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"image\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\", if-modified-since:\"Wed, 11 Jun 2025 22:24:25 GMT\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:33:41.891-0300","@version":"1","message":"REQUEST DATA : GET /swagger-ui/favicon-32x32.png, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"no-cors\", sec-fetch-dest:\"image\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\", if-modified-since:\"Wed, 11 Jun 2025 22:24:25 GMT\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-3","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:33:41.912-0300","@version":"1","message":"REQUEST DATA : GET /api-docs/swagger-config, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", accept:\"*/*\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"cors\", sec-fetch-dest:\"empty\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-2","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:33:41.952-0300","@version":"1","message":"Before request [GET /api-docs, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"application/json,*/*\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"cors\", sec-fetch-dest:\"empty\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:33:42.453-0300","@version":"1","message":"Init duration for springdoc-openapi is: 490 ms","logger_name":"org.springdoc.api.AbstractOpenApiResource","thread_name":"http-nio-8081-exec-4","level":"INFO","level_value":20000}
{"@timestamp":"2025-06-12T23:33:42.518-0300","@version":"1","message":"REQUEST DATA : GET /api-docs, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"application/json,*/*\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"cors\", sec-fetch-dest:\"empty\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-4","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:34:23.777-0300","@version":"1","message":"Before request [POST /api/v1/jwt/validate, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", content-length:\"168\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"application/json\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", origin:\"http://localhost:8081\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"cors\", sec-fetch-dest:\"empty\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\", Content-Type:\"application/json;charset=UTF-8\"]]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-7","level":"DEBUG","level_value":10000}
{"@timestamp":"2025-06-12T23:34:23.903-0300","@version":"1","message":"Received JWT validation request [requestId=fda91102-27ee-436e-becc-a131085181b6]","logger_name":"com.example.controller.JwtController","thread_name":"http-nio-8081-exec-7","level":"INFO","level_value":20000,"requestId":"fda91102-27ee-436e-becc-a131085181b6"}
{"@timestamp":"2025-06-12T23:34:23.903-0300","@version":"1","message":"Starting JWT validation [requestId=fda91102-27ee-436e-becc-a131085181b6]","logger_name":"com.example.service.JwtValidationService","thread_name":"http-nio-8081-exec-7","level":"DEBUG","level_value":10000,"requestId":"fda91102-27ee-436e-becc-a131085181b6"}
{"@timestamp":"2025-06-12T23:34:23.903-0300","@version":"1","message":"Starting JWT decoding [requestId=fda91102-27ee-436e-becc-a131085181b6]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"http-nio-8081-exec-7","level":"DEBUG","level_value":10000,"requestId":"fda91102-27ee-436e-becc-a131085181b6"}
{"@timestamp":"2025-06-12T23:34:23.909-0300","@version":"1","message":"Successfully decoded JWT with 4 claims [requestId=fda91102-27ee-436e-becc-a131085181b6]","logger_name":"com.example.service.decoder.Base64JwtDecoder","thread_name":"http-nio-8081-exec-7","level":"DEBUG","level_value":10000,"requestId":"fda91102-27ee-436e-becc-a131085181b6"}
{"@timestamp":"2025-06-12T23:34:23.909-0300","@version":"1","message":"JWT decoded successfully, found 4 claims [requestId=fda91102-27ee-436e-becc-a131085181b6]","logger_name":"com.example.service.JwtValidationService","thread_name":"http-nio-8081-exec-7","level":"DEBUG","level_value":10000,"requestId":"fda91102-27ee-436e-becc-a131085181b6"}
{"@timestamp":"2025-06-12T23:34:23.912-0300","@version":"1","message":"JWT validation failed: JWT deve conter exatamente 3 claims (Name, Role, Seed) [requestId=fda91102-27ee-436e-becc-a131085181b6]","logger_name":"com.example.controller.JwtController","thread_name":"http-nio-8081-exec-7","level":"WARN","level_value":30000,"requestId":"fda91102-27ee-436e-becc-a131085181b6"}
{"@timestamp":"2025-06-12T23:34:23.921-0300","@version":"1","message":"REQUEST DATA : POST /api/v1/jwt/validate, client=0:0:0:0:0:0:0:1, headers=[host:\"localhost:8081\", connection:\"keep-alive\", content-length:\"168\", sec-ch-ua-platform:\"\"Windows\"\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0\", accept:\"application/json\", sec-ch-ua:\"\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"\", sec-ch-ua-mobile:\"?0\", origin:\"http://localhost:8081\", sec-fetch-site:\"same-origin\", sec-fetch-mode:\"cors\", sec-fetch-dest:\"empty\", referer:\"http://localhost:8081/swagger-ui/index.html\", accept-encoding:\"gzip, deflate, br, zstd\", accept-language:\"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\", cookie:\"JSESSIONID=4A1830204590829C46A16BB2999381AB\", Content-Type:\"application/json;charset=UTF-8\"], payload={\n  \"jwt\": \"eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiTWVtYmVyIiwiT3JnIjoiQlIiLCJTZWVkIjoiMTQ2MjciLCJOYW1lIjoiVmFsZGlyIEFyYW5oYSJ9.cmrXV_Flm5mfdpfNUVopY_I2zeJUy4EZ4i3Fea98zvY\"\n}]","logger_name":"org.springframework.web.filter.CommonsRequestLoggingFilter","thread_name":"http-nio-8081-exec-7","level":"DEBUG","level_value":10000}
